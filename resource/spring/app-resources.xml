<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
	http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 
	
	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.kssj.base.datasource.DynamicDataSource">  
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="sqlServerDataSource" key="SQLSERVER"></entry>  
                <entry value-ref="mysqlDataSource" key="MYSQL"></entry>  
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="mysqlDataSource"></property>  
    </bean>
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="lobHandler" lazy-init="true" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtrator">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>
	<bean id="nativeJdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />
	
	<!-- session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
  				<value>classpath*:com/kssj/auth/model/*.hbm.xml</value>  
				<value>classpath*:com/kssj/order/model/**/*.hbm.xml</value>
				<value>classpath*:com/kssj/product/model/**/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="connection.useUnicode">true</prop>
				<prop key="connection.characterEncoding">utf-8</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.jdbc.fetch_size">20</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="net.sf.ehcache.configurationResourceName">conf/ehcache.xml</prop>
			</props>
		</property>
		<!-- unified management：second_level_cache; Or in the *.hbm.xml,write:<cache usage="read-write"/>
		<class-cache class="org.hibernate.test.legacy.Simple" region="Simple" usage="read-only"/>
		 -->
	</bean>
	
	<!-- hibernate hibernateTemplate configuration -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	 
	<!-- aop:begin -->
	<!-- transaction managers -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>    
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="servicePointCutFrame" -->
<!-- 			expression="execution(* com.kssj.frame.service..*Service.*(..))" /> -->
<!-- 		<aop:pointcut id="servicePointCutAuth" -->
<!-- 			expression="execution(* com.kssj.auth.service..*Service.*(..))" /> -->
<!-- 		<aop:pointcut id="servicePointCutBase" -->
<!-- 			expression="execution(* com.kssj.base.service..*Service.*(..))" /> -->
<!-- 		<aop:pointcut id="servicePointCutOrder" -->
<!-- 			expression="execution(* com.kssj.order.service..*Service.*(..))" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCutFrame" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCutBase" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCutAuth" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCutOrder" /> -->
<!-- 	</aop:config>  -->
	<!-- transaction propagation  -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="txManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="get*" read-only="true" /> -->
<!-- 			<tx:method name="find*" read-only="true" /> -->
<!-- 			<tx:method name="list*" read-only="true" /> -->
<!-- 			<tx:method name="add*"  propagation="REQUIRED"/> -->
<!-- 			<tx:method name="upd*" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="save*" propagation="REQUIRED" /> -->
<!-- 			<tx:method name="*" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice>  -->
	<!-- aop:end -->
	<!-- NO/is CGLIB -->
	<aop:aspectj-autoproxy />
	
	<context:annotation-config />
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入;
		   当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了
	<context:component-scan base-package="com.tiangong">
		<context:include-filter type="regex" expression=".*DaoImpl"/>
		<context:include-filter type="regex" expression=".*ServiceImpl"/>
		<context:include-filter type="regex" expression=".*ManagerImpl"/>
		<context:include-filter type="regex" expression=".*Service"/>
		<context:include-filter type="regex" expression=".*Manager"/>
	</context:component-scan>
	 -->
	<!-- 扫描注解Bean
 	<context:component-scan base-package="com.dcmp.mongo.service">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
 	<context:component-scan base-package="com.dcmp.mongo.dao">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	 -->
	<context:component-scan base-package="com.kssj" />
	
	<!-- beans of the System tools -->
<!-- 	<bean id="appUtil" class="com.dcmp.base.listener.AppUtil" /> -->
<!-- 	<bean class="com.dcmp.base.sysLoader.SpringContextHolder" lazy-init="false" /> -->
<!-- 	<bean id="solrService" class="com.dcmp.frame.se.impl.SolrServiceImpl" /> -->
<!-- 	<bean id="mahoutService" class="com.dcmp.frame.recommend.impl.MahoutServiceImpl"/> -->
<!-- 	<bean id="appManager" class="com.dcmp.base.sysLogin.AppManager"/> -->
	
</beans>